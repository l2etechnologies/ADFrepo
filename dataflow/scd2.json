{
	"name": "scd2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "customertablescd",
						"type": "DatasetReference"
					},
					"name": "Sourcefilecsv"
				},
				{
					"dataset": {
						"referenceName": "scd2",
						"type": "DatasetReference"
					},
					"name": "Targettable"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "scd2",
						"type": "DatasetReference"
					},
					"name": "InsertNew"
				},
				{
					"dataset": {
						"referenceName": "scd2",
						"type": "DatasetReference"
					},
					"name": "UpdateExisting"
				}
			],
			"transformations": [
				{
					"name": "addingisActive"
				},
				{
					"name": "Select1"
				},
				{
					"name": "Select2"
				},
				{
					"name": "Lookup1"
				},
				{
					"name": "Existingrecords"
				},
				{
					"name": "AlterRow1"
				},
				{
					"name": "Select3"
				},
				{
					"name": "DerivedColumn1"
				}
			],
			"script": "source(output(\n\t\t{Customer Id} as integer,\n\t\t{Customer Name} as string,\n\t\t{Customer Country} as string,\n\t\t{Phone Number} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Sourcefilecsv\nsource(output(\n\t\tSeqkey as integer,\n\t\tCustomer_Id as integer,\n\t\tCustomer_Name as string,\n\t\tCustomer_Country as string,\n\t\tPhone_Number as string,\n\t\tisActive as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Targettable\nSourcefilecsv derive(isActive = 1) ~> addingisActive\naddingisActive select(mapColumn(\n\t\t{Customer Id},\n\t\t{Customer Name},\n\t\t{Customer Country},\n\t\t{Phone Number},\n\t\tisActive\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nTargettable select(mapColumn(\n\t\tT_Seqkey = Seqkey,\n\t\tT_Customer_Id = Customer_Id,\n\t\tT_Customer_Name = Customer_Name,\n\t\tT_Customer_Country = Customer_Country,\n\t\tT_Phone_Number = Phone_Number,\n\t\tT_isActive = isActive\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSourcefilecsv, Select2 lookup({Customer Id} == T_Customer_Id,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nLookup1 filter(!isNull(T_Customer_Id)) ~> Existingrecords\nDerivedColumn1 alterRow(updateIf(true())) ~> AlterRow1\nExistingrecords select(mapColumn(\n\t\tT_Seqkey,\n\t\tT_Customer_Id,\n\t\tT_Customer_Name,\n\t\tT_Customer_Country,\n\t\tT_Phone_Number,\n\t\tT_isActive\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect3 derive(T_isActive = 0) ~> DerivedColumn1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tSeqkey as integer,\n\t\tCustomer_Id as integer,\n\t\tCustomer_Name as string,\n\t\tCustomer_Country as string,\n\t\tPhone_Number as string,\n\t\tisActive as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 2,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tCustomer_Id = {Customer Id},\n\t\tCustomer_Name = {Customer Name},\n\t\tCustomer_Country = {Customer Country},\n\t\tPhone_Number = {Phone Number},\n\t\tisActive\n\t)) ~> InsertNew\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tSeqkey as integer,\n\t\tCustomer_Id as integer,\n\t\tCustomer_Name as string,\n\t\tCustomer_Country as string,\n\t\tPhone_Number as string,\n\t\tisActive as integer\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['Seqkey'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tSeqkey = T_Seqkey,\n\t\tCustomer_Id = T_Customer_Id,\n\t\tCustomer_Name = T_Customer_Name,\n\t\tCustomer_Country = T_Customer_Country,\n\t\tPhone_Number = T_Phone_Number,\n\t\tisActive = T_isActive\n\t)) ~> UpdateExisting"
		}
	}
}